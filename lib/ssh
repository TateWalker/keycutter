# keycutter/lib/ssh - Functions to create SSH keys and config

KEYCUTTER_ROOT="$(readlink -f "$(dirname -- "${BASH_SOURCE[0]:-${0:A}}")/../")"
source "${KEYCUTTER_ROOT}/lib/utils"

# Initialise some environment variables

: ${KEYCUTTER_CONFIG_DIR:="${HOME}/.keycutter"}
: ${KEYCUTTER_SSH_KEY_DIR:="${KEYCUTTER_CONFIG_DIR}/ssh/keys"}
: ${KEYCUTTER_SSH_KEY_TYPE:="ecdsa-sk"}

keycutter-ssh-key-create() {

    # Generate a new FIDO SSH key

    local ssh_key_path="${1:-}"
    local ssh_key_type="${2:-${KEYCUTTER_SSH_KEY_TYPE}}"
    local resident="${3:-}"

    local ssh_keytag="$(basename "${ssh_key_path}")"        # Extract SSH Keytag from path

    if [[ -z $ssh_key_path || -z $ssh_keytag ]]; then
        usage
        return 1
    fi

    dir-ensure "$(dirname "$ssh_key_path")" 0700

    log "Generate FIDO SSH key: $ssh_key_path"
    ssh-keygen -t "$ssh_key_type" -f "$ssh_key_path" -C "$ssh_keytag" ${resident:+-O resident}
    chmod 0600 "${ssh_key_path}.pub"
}

keycutter-ssh-config-create() {

    # Create or update SSH configuration file for the identity

    local ssh_key_path="${1:?}"

    local keycutter_ssh_config_path="${KEYCUTTER_CONFIG_DIR}/ssh/config"
    local ssh_agents_dir="${KEYCUTTER_CONFIG_DIR}/ssh/agents"
    local keycutter_scripts_dir="${KEYCUTTER_CONFIG_DIR}/scripts"

    # Ensure keycutter config dir exists
    dir-ensure "${KEYCUTTER_CONFIG_DIR}" 0700

    # Copy in main keycutter ssh config
    dir-ensure "$(dirname "${keycutter_ssh_config_path}")" 0700
    apply-template "${KEYCUTTER_ROOT}/templates/ssh/config" "${keycutter_ssh_config_path}"

    # Ensure $KEYCUTTER_CONFIG_DIR/ssh/config is Include'd by ~/.ssh/config.
    prepend-line-if-missing ~/.ssh/config "Include ${keycutter_ssh_config_path/#$HOME/'~'}"

    # Copy in ssh-agent-ensure script
    dir-ensure "${keycutter_scripts_dir}" 0700
    apply-template \
        "${KEYCUTTER_ROOT}/templates/scripts/ssh-agent-ensure" \
        "${keycutter_scripts_dir}/ssh-agent-ensure" 

    # Offer to add key to config for default ssh-agent
    read -p "Add key to default keycutter ssh-agent? [y/N] " -n 1 -r
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        dir-ensure "${ssh_agents_dir}" 0700
        dir-ensure "${ssh_agents_dir}/default/keys" 0700
        log "Creating symlink: ln -sf ${ssh_key_path} ${ssh_agents_dir}/default/keys"
        ln -sf "${ssh_key_path}" "${ssh_agents_dir}/default/keys" # XXX Prompt before overwrite
    fi
}

# sixty-ten 

_ssh-keytag-service() {
    # Extract the Identity part of the SSH Keytag
    local ssh_keytag_service_identity="$(_ssh-keytag-service-identity "${1:-}")"
    local service="${ssh_keytag_service_identity%%_*}" # Removed longest match from end
    if [[ $service == $ssh_keytag_service_identity ]]; then
        return
    else
        echo "$service"
    fi
}

_ssh-keytag-identity() {
    # Extract the Identity part of the SSH Keytag
    local ssh_keytag_service_identity="$(__ssh-keytag-service-identity "${1:-}")"
    local identity="${ssh_keytag_service_identity#*_}" # remove shortest match from start
    echo "$identity"
}
