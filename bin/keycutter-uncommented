set -eu -o pipefail
KEYCUTTER_ROOT="$(readlink -f "$(dirname -- "${BASH_SOURCE[0]:-${0:A}}")/../")"
source "${KEYCUTTER_ROOT}/lib/functions"
: ${GIT_CONFIG:="~/.gitconfig"}
: ${KEYCUTTER_CONFIG_DIR:="~/.keycutter"}
: ${KEYCUTTER_SSH_KEY_TYPE:="ecdsa-sk"}
usage() {
    log "Usage:"
    log "       $(basename "$0") <ssh-keytag> [--email <value>] [--name <value>] [--resident] [--type <value>]"
    log
    log "Arguments:"
    log
    log "  ssh-keytag Required. Identifier for key (e.g. github.com_alexdoe@laptop-personal)"
    log
    log "  --email    Optional. Set Git user.email for this key."
    log "  --name     Optional. Set Git user.name for this key."
    log "  --resident Optional. Create resident FIDO SSH key (default is non-resident)"
    log "  --type     Optional. Which cryptographic key to use (ecdsa-sk, ed25519-sk). Default is ecdsa-sk."
    log
    log "SSH Keytag format: service_user@device"
    log 
    log "  - service : Service this key is used with (e.g. 'github.com', 'aws', 'digitalocean')"
    log "  - user    : Service User this SSH Key authenticates as (e.g. 'alexdoe')"
    log "  - device  : Device this ssh key resides on ( e.g. 'yubikey1', 'work-laptop', 'zfold5')"
}
create() {
    if [[ $# -lt 1 ]]; then
        usage
        exit 1
    fi
    local git_user_email=""
    local git_user_name=""
    local ssh_key_resident=""
    local ssh_key_type="$KEYCUTTER_SSH_KEY_TYPE"
    local ssh_keytag=""
    while (( "$#" )); do
        case "$1" in
            --email)
                git_user_email="$2"
                shift 2
                ;;
            --name)
                git_user_name="$2"
                shift 2
                ;;
            --resident)
                ssh_key_resident="yes"
                shift
                ;;
            --type)
                ssh_key_type="$2"
                shift 2
                ;;
            -h|--help)
                usage
                exit 0
                ;;
            *)
                if [[ -z $ssh_keytag ]]; then
                    ssh_keytag="$1"
                else
                    log "Error: Invalid option $1"
                    usage
                    exit 1
                fi
                shift
                ;;
        esac
    done
    if [[ -z "$ssh_keytag" ]]; then
        usage
        exit 1
    fi
    local service="$(_ssh-keytag-service "$ssh_keytag")"
    dir-ensure "$KEYCUTTER_CONFIG_DIR" 0700 
    local ssh_key_path="${KEYCUTTER_CONFIG_DIR}/ssh/keys/${ssh_keytag}" # Path SSH key will be written to
    keycutter-ssh-key-create "$ssh_key_path" "$ssh_key_type" "$ssh_key_resident"
    keycutter-ssh-config-create "$ssh_key_path"
    keycutter-git-config-create "$ssh_key_path" "$git_user_email" "$git_user_name"
    if [[ $service =~ github.com ]]; then
      log "Add SSH key to GitHub for auth and commit/tag signing: $ssh_key_path"
      github-ssh-key-add "$ssh_key_path" "$ssh_keytag"
      local demo_message="\nYou can SSH to GitHub by running:\n\n ssh -T $(_ssh-keytag-service-identity "$ssh_key_path")\n"
    else 
        log "Skip GitHub specific setup - SSH Keytag identity part doesn't contain 'github.com'."
    fi
    log "Success! Setup complete for key: $ssh_keytag"
    if [[ -n ${demo_message:-} ]]; then
      echo -e "$demo_message" # Only for GitHub keys
    fi
}
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    if [[ "${1:-}" == "list" ]]; then
        list
    else
        [[ "${1:-}" == "create" ]] && shift
        create "$@"
    fi
fi
